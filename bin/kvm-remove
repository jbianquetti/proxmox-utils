#!/usr/bin/python

import os
import re
import sys
import subprocess
import logging
import optparse

from proxmox_utils import KVMUtils, ShellUtils
                    
def main():
  # ---------------------------------------------------------------
  # Option handling
  # ---------------------------------------------------------------
  usage = "usage: %prog [options] <machine-id or template-name>"
  parser = optparse.OptionParser(usage)
  
  options, args = parser.parse_args()

  if not len(args) == 1:
    parser.error("Wrong number of arguments.")
  
  # ---------------------------------------------------------------
  # Grab options
  # ---------------------------------------------------------------
  machine_id = args[0]
  is_template = False
  
  if re.match(KVMUtils.REGEX_TEMPLATE_NAME, machine_id) and not machine_id.isdigit():
    template_name = machine_id
    machine_id = "t_%s" % template_name
    is_template = True
  elif not machine_id.isdigit():
    raise Exception("Please provide a numeric machine id or a template name.")

  # ---------------------------------------------------------------
  # Determine paths
  # ---------------------------------------------------------------  
  img_path = KVMUtils.image_path(machine_id)
  config_path = KVMUtils.config_path(machine_id)
  
  # ---------------------------------------------------------------
  # Check if machine exists
  # ---------------------------------------------------------------
  if not KVMUtils.exists(machine_id):
    raise Exception("The machine does not exist.")

  # ---------------------------------------------------------------
  # Confirmation
  # ---------------------------------------------------------------
  #what = 'template' if is_template else 'machine'
  #which = template_name if is_template else machine_id
  
  #ShellUtils.confirm_continue("Do you really want to delete the %s %s?" % (what, which), False)

  # ---------------------------------------------------------------
  # Check if running
  # ---------------------------------------------------------------
  if not is_template:
    source_status = KVMUtils.status(machine_id)
    if source_status == 'running':
      ShellUtils.confirm_continue("Source machine is currently running. Do you want to stop if before removal?", True)
      logging.info("Stopping machine %s..." % machine_id)
      KVMUtils.stop(machine_id)
      logging.info("Machine %s stopped" % machine_id)

  # ---------------------------------------------------------------
  # Remove files
  # ---------------------------------------------------------------
  to_remove = [img_path, config_path]

  for directory in to_remove:
   # if ShellUtils.confirm("Removing `%s`. Continue?" % directory):
      ShellUtils.command(["rm", "-rf", directory])
      logging.info("Path removed")
   # else:
   #   logging.info("Directory not removed")

if __name__ == '__main__':
  ShellUtils.configure_logging()
  main()
  exit(0)
